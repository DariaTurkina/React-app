{"ast":null,"code":"var _jsxFileName = \"/home/user/React-app/Client/src/Components/Todo.js\";\nimport React from 'react';\nimport './Todo_Style.css';\nexport default class Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditable: false,\n      whereIsTheMouse: false,\n      name: props.taskName\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.inputRef.current.focus();\n  }\n\n  checkTask() {\n    let bool = !this.props.taskStatus;\n    this.props.checkTask(this.props.id, bool);\n  }\n\n  changeTextName() {\n    this.setState({\n      isEditable: true\n    });\n  }\n\n  isTextChange(e) {\n    let textValue = e.target.value;\n    this.setState({\n      name: textValue\n    });\n    this.props.changeText(textValue, this.props.id);\n  }\n\n  isEnterPress(e) {\n    let textValue = this.state.name;\n\n    if (e.which === 13) {\n      this.setState({\n        isEditable: false\n      });\n      this.props.changeTaskName(textValue, this.props.id);\n    }\n  }\n\n  onBlurHandler() {\n    this.setState({\n      isEditable: false\n    });\n  }\n\n  deleteTask() {\n    const id = this.props.id;\n    this.props.deleteTask(id);\n  }\n\n  classNameSpace() {\n    let className = \"\";\n\n    if (this.state.isEditable) {\n      className += \"invisibleInput\";\n    } else if (!this.props.taskStatus) {\n      className += \"visibleInput\";\n    } else {\n      className += \"visibleInput isChecked text-muted\";\n    }\n\n    return className;\n  }\n\n  mouseAt() {\n    this.setState({\n      whereIsTheMouse: true\n    });\n  }\n\n  mouseOut() {\n    this.setState({\n      whereIsTheMouse: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todoBox\",\n      onMouseEnter: () => this.mouseAt(),\n      onMouseLeave: () => this.mouseOut(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.props.taskStatus,\n      onChange: () => this.checkTask(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"taskName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pClass\",\n      onDoubleClick: e => this.changeTextName(e),\n      className: this.classNameSpace(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.taskName), React.createElement(\"input\", {\n      rows: \"5\",\n      className: this.state.isEditable ? \"visibleInput inps\" : \"invisibleInput\",\n      type: \"text\",\n      id: this.props.id,\n      onKeyPress: e => this.isEnterPress(e),\n      disabled: !this.state.isEditable,\n      onBlur: () => this.onBlurHandler(),\n      onChange: e => this.isTextChange(e),\n      ref: this.inputRef,\n      value: this.props.taskName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.deleteTask(),\n      className: !this.state.whereIsTheMouse ? \"invisibleButX\" : \"closeXbut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"\\xD7\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/user/React-app/Client/src/Components/Todo.js"],"names":["React","Todo","Component","constructor","props","state","isEditable","whereIsTheMouse","name","taskName","inputRef","createRef","componentDidUpdate","current","focus","checkTask","bool","taskStatus","id","changeTextName","setState","isTextChange","e","textValue","target","value","changeText","isEnterPress","which","changeTaskName","onBlurHandler","deleteTask","classNameSpace","className","mouseAt","mouseOut","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Todo_Style.css';\n\nexport default class Todo extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isEditable: false,\n            whereIsTheMouse: false,\n            name: props.taskName\n        };\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate() {\n        this.inputRef.current.focus();\n    }\n\n    checkTask() {\n\n        let bool = !this.props.taskStatus;\n        this.props.checkTask(this.props.id, bool);\n    }\n\n    changeTextName() {\n        this.setState({ isEditable: true });\n    }\n\n    isTextChange(e) {\n        let textValue = e.target.value;\n        this.setState({ name: textValue });\n        this.props.changeText(textValue, this.props.id);\n    }\n\n    isEnterPress(e) {\n        let textValue = this.state.name;\n        if (e.which === 13) {\n            this.setState({ isEditable: false });\n            this.props.changeTaskName(textValue, this.props.id);\n        }\n    }\n\n    onBlurHandler() {\n        this.setState({ isEditable: false })\n    }\n\n    deleteTask() {\n        const { id } = this.props;\n        this.props.deleteTask(id)\n    }\n\n    classNameSpace() {\n        let className = \"\";\n        if (this.state.isEditable) {\n            className += \"invisibleInput\";\n        } else if (!this.props.taskStatus) {\n            className += \"visibleInput\";\n        } else {\n            className += \"visibleInput isChecked text-muted\";\n        }\n        return className;\n    }\n\n    mouseAt() {\n        this.setState({ whereIsTheMouse: true });\n    }\n    mouseOut() {\n        this.setState({ whereIsTheMouse: false });\n    }\n\n    render() {\n        return (\n            <div className=\"Todo\" >\n                <div\n                    className=\"todoBox\"\n                    onMouseEnter={() => this.mouseAt()}\n                    onMouseLeave={() => this.mouseOut()}\n                >\n                    <div className=\"checkDiv\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"checkbox\"\n                            checked={this.props.taskStatus}\n                            onChange={() => this.checkTask()}\n                        />\n                    </div>\n                    <div className=\"taskName\">\n                        <div className=\"pClass\"\n                            onDoubleClick={(e) => this.changeTextName(e)}\n                            className={this.classNameSpace()}\n                        >\n                            {this.props.taskName}\n                        </div>\n                        <input\n                            rows=\"5\"\n                            className={this.state.isEditable ? \"visibleInput inps\" : \"invisibleInput\"}\n                            type=\"text\"\n                            id={this.props.id}\n                            onKeyPress={(e) => this.isEnterPress(e)}\n                            disabled={!this.state.isEditable}\n                            onBlur={() => this.onBlurHandler()}\n                            onChange={(e) => this.isTextChange(e)}\n                            ref={this.inputRef}\n                            value={this.props.taskName}\n                        />\n                    </div>\n                    <div className=\"delete\">\n                        <button\n                            onClick={() => this.deleteTask()}\n                            className={!this.state.whereIsTheMouse ? \"invisibleButX\" : \"closeXbut\"}\n                        >×</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}