{"ast":null,"code":"var _jsxFileName = \"/home/user/React-app/Client/src/TaskList.js\";\nimport React from 'react';\nimport Todo from './Components/Todo.js.js';\nimport Filter from './Components/Filter.js.js';\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filterState: \"all\"\n    };\n  }\n\n  showTaskList(data, whatToRender) {\n    const eThis = this.props;\n    let toRender = [];\n\n    if (this.state.filterState !== whatToRender) {\n      if (whatToRender === \"active\") {\n        this.setState({\n          filterState: \"active\"\n        });\n        toRender = data.filter(item => item.status === false);\n      } else if (whatToRender === \"completed\") {\n        this.setState({\n          filterState: \"completed\"\n        });\n        toRender = data.filter(item => item.status === true);\n      } else if (whatToRender === \"all\") {\n        this.setState({\n          filterState: \"all\"\n        });\n        toRender = data;\n      }\n    } else {\n      if (whatToRender === \"active\") {\n        toRender = data.filter(item => item.status === false);\n      } else if (whatToRender === \"completed\") {\n        toRender = data.filter(item => item.status === true);\n      } else if (whatToRender === \"all\") {\n        toRender = data;\n      }\n    }\n\n    return toRender.map((item, idx) => React.createElement(Todo, {\n      key: idx,\n      taskName: item.name,\n      taskStatus: item.status,\n      id: item._id,\n      checkTask: eThis.checkTask,\n      changeTaskName: eThis.changeTaskName,\n      changeText: eThis.changeText,\n      deleteTask: eThis.deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"TaskList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.showTaskList(this.props.array, this.state.filterState), this.props.array.length !== 0 && React.createElement(Filter, {\n      transmit: (todoes, whatToRender) => this.showTaskList(todoes, whatToRender),\n      removeAllCompleted: this.props.removeAllCompleted,\n      array: this.props.array,\n      taskListStatus: this.state.filterState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport { TaskList };","map":{"version":3,"sources":["/home/user/React-app/Client/src/TaskList.js"],"names":["React","Todo","Filter","TaskList","Component","state","filterState","showTaskList","data","whatToRender","eThis","props","toRender","setState","filter","item","status","map","idx","name","_id","checkTask","changeTaskName","changeText","deleteTask","render","array","length","todoes","removeAllCompleted"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Todo from './Components/Todo.js.js'\nimport Filter from './Components/Filter.js.js'\n\nclass TaskList extends React.Component {\n\n    state = {\n        filterState: \"all\"\n    };\n\n    showTaskList(data, whatToRender) {\n        const eThis = this.props;\n        let toRender = [];\n        if (this.state.filterState !== whatToRender) {\n            if (whatToRender === \"active\") {\n                this.setState({ filterState: \"active\" });\n                toRender = data.filter(item => item.status === false);\n            } else if (whatToRender === \"completed\") {\n                this.setState({ filterState: \"completed\" });\n                toRender = data.filter(item => item.status === true);\n            } else if (whatToRender === \"all\") {\n                this.setState({ filterState: \"all\" });\n                toRender = data;\n            }\n        } else {\n            if (whatToRender === \"active\") {\n                toRender = data.filter(item => item.status === false);\n            } else if (whatToRender === \"completed\") {\n                toRender = data.filter(item => item.status === true);\n            } else if (whatToRender === \"all\") {\n                toRender = data;\n            }\n        }\n        return toRender.map((item, idx) => (\n            <Todo\n                key={idx}\n                taskName={item.name}\n                taskStatus={item.status}\n                id={item._id}\n                checkTask={eThis.checkTask}\n                changeTaskName={eThis.changeTaskName}\n                changeText={eThis.changeText}\n                deleteTask={eThis.deleteTask}\n            />\n        ));\n    }\n\n    render() {\n        return (\n            <div className=\"TaskList\">\n                {this.showTaskList(this.props.array, this.state.filterState)}\n                {this.props.array.length !== 0 &&\n                    <Filter\n                        transmit={(todoes, whatToRender) => this.showTaskList(todoes, whatToRender)}\n                        removeAllCompleted={this.props.removeAllCompleted}\n                        array={this.props.array}\n                        taskListStatus={this.state.filterState}\n                    />\n                }\n            </div>\n        )\n    }\n}\nexport { TaskList }"]},"metadata":{},"sourceType":"module"}